// server.js

const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
require("dotenv").config(); // ูุชุญููู ุงููุชุบูุฑุงุช ูู .env

const app = express();
const PORT = process.env.PORT || 5000;

// Middleware
app.use(cors()); // ุงูุณูุงุญ ูู React ุจุงูุงุชุตุงู
app.use(express.json()); // ููุจูู ุจูุงูุงุช JSON ูู ุงูุทูุจุงุช (req.body)

// ------------------------------------
// 1. ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
// ------------------------------------
mongoose
  .connect(process.env.MONGO_URI)
  .then(() => {
    console.log("โ Connected to MongoDB successfully.");
    // ุชุดุบูู ุงูุฎุงุฏู ุจุนุฏ ุงูุชุฃูุฏ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
    app.listen(PORT, () => {
      console.log(`๐ Server is running on port: ${PORT}`);
    });
  })
  .catch((err) => {
    console.error("โ MongoDB connection error:", err);
  });

// ------------------------------------
// 2. ุงููุณุงุฑุงุช (Routes)
const todoRoutes = require("../routes/todo"); // ุงุณุชูุฑุงุฏ ุงููุณุงุฑุงุช
app.use("/api/todos", todoRoutes); // ุงุณุชุฎุฏุงู ุงููุณุงุฑุงุช ุชุญุช ูุณุงุฑ /api/todos

// ------------------------------------
// ูุซุงู: app.use('/api/todos', todoRoutes);
// ------------------------------------
